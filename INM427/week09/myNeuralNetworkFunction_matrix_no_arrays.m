function [y1,xf1,xf2] = myNeuralNetworkFunction(x1,x2,xi1,xi2)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 29-Mar-2019 15:43:00.
%
% [y1,xf1,xf2] = myNeuralNetworkFunction(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 2xTS matrix, input #1
%   x2 = 1xTS matrix, input #2
%   xi1 = 2x4 matrix, initial 4 delay states for input #1.
%   xi2 = 1x4 matrix, initial 4 delay states for input #2.
% and returns:
%   y1 = 1xTS matrix, output #1
%   xf1 = 2x4 matrix, final 4 delay states for input #1.
%   xf2 = 1x4 matrix, final 4 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [8;0];
x1_step1.gain = [0.5;1];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = 3.6931019;
x2_step1.gain = 0.246715291207742;
x2_step1.ymin = -1;

% Layer 1
b1 = [6.8904176563279389001;3.3996859972293167473;2.5461523252523812211;-1.833450451744137677;-4.5484982180317832245;-2.9114670607740698038;-2.6360545674601016941;-3.6763676421731661392;-1.6054650817714088973;-7.9626560538810817746];
IW1_1 = [-0.26714370535386272598 4.0127288879154106027 -0.099551307770980465572 -0.17922837451591022706 0.43050981384457137624 0.40336985940933656192 -0.10316902681345858916 0.40186060191648376172;-0.011674792039012473616 0.39665499026185696563 -0.029805079927215261115 -0.00026229163289369361589 -0.0010210092912910128174 0.51610011601716254681 -0.0029288470431772326702 0.45304613218599898428;-0.10037187446790829526 0.11732247551285919507 -0.0070645740581539440139 0.018486059366279720961 0.017919293198681109092 -0.054240810767075320342 -0.0022028841046568183731 -0.044805308210887073717;-0.17474077554455016981 2.1411514026449181003 2.4400842121520698313 0.081432971364191142349 -0.2024556257574572915 -1.5571978033704056976 0.14016372619729169924 -0.36050039144184814477;-0.022968596710669027944 -2.4893001108117340792 -0.10190131331712852514 -0.27408983503281969529 -0.036537470525858546655 0.11349522998947940422 0.133565268323881714 -0.2901889217972145607;-0.1120520653215968665 -0.40711306315451906146 -0.16867907870961873495 -0.232540389278327847 0.29212600059301918609 -0.0032647958567639757607 0.079911853861715287373 -0.11251504299321354874;-0.39412788224333117348 0.25125919079596059635 -0.22962913930994993672 -0.023756179758286675302 0.21289080403329752045 -0.163734248969803875 0.024462768182700087016 -0.17455012995103111328;1.3822527863105669166 -6.4505202806369119628 0.48218485217903817031 1.5872108148722612331 -0.85005984954315061408 -6.7983233933205600152 -0.24273346522445962692 0.40881578447562938461;0.21132344828458449193 -0.88998067372274025644 0.015284528724430687663 0.41754131764710017416 -0.19280524786825961603 0.47841671803627394688 -0.010286623172348866029 3.4167409409975864065;-1.5344708504099096036 2.547305869222943997 -0.16446645298936846125 -2.8187990657175130416 0.90533603487026159673 5.4950636301735125144 0.45618709502875409711 -4.033729339509962486];
IW1_2 = [-1.1696895265660351981 0.36730023031420555579 0.51445759574213656418 0.0072697982386870085847;3.810814846887816465 -0.16835327153830437208 -0.016801489151315449067 0.84451559617557037107;-3.2743889454631607272 0.31509995905484994294 0.092325331746629130114 0.019986707920151544626;2.206523691829353595 -1.0132923201789458822 0.75542492169730091067 -0.18650318311517355419;-14.84183510601383027 12.228857939233147789 3.6492291153335694176 -0.51126954225794940534;5.489610286482621504 3.7562318853780145567 -3.8264641044632488054 -0.47121677314176346751;3.0698621325397823512 0.6325146344894168049 -0.20341901365495959619 -0.31697048782114034537;-53.002147342383963746 18.80290964471605264 27.548491545868795782 -9.7397310549804618773;-5.7304397006657481484 1.1399263442232194787 -4.4578078806392182898 3.2911997044105438803;-4.5580655884661807065 -2.7854817000755716094 -1.8978501593395855629 -0.3168316307008710031];

% Layer 2
b2 = 0.98560919814580061349;
LW2_1 = [-1.0370905057172774555 0.30108548945684077136 -0.29131868732994259386 0.010833439450940439766 -0.15310176267561187435 -0.14143414716809368792 0.10477698638386905017 -0.4473196253354330687 -0.12873833618240057564 -0.022335343627259654498];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.246715291207742;
y1_step1.xoffset = 3.6931019;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(2,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(1,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS
    
    % Rotating delay state position
    xdts = mod(ts+3,5)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2 3 4]-1,5)+1),8,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2 3 4]-1,5)+1),4,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 4);
xits = finalxts(finalxts<=4);
xts = finalxts(finalxts>4)-4;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
